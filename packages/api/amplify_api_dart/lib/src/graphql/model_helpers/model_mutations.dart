// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

import 'package:amplify_api_dart/src/graphql/factories/model_mutations_factory.dart';
import 'package:amplify_core/amplify_core.dart';

/// Static helpers to generate mutation `GraphQLRequest` instances from models generated by Amplify codegen.

class ModelMutations {
  ModelMutations._(); // only static methods here, prevent calling constructor

  /// Generates a request to create a model.
  ///
  /// ```dart
  /// final todo = Todo(name: 'my first todo', description: 'todo description');
  /// final request = ModelMutations.create(todo);
  /// ```
  static GraphQLRequest<M> create<ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>>(
    M model, {
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
  }) {
    return ModelMutationsFactory.instance.create<ModelIdentifier, M>(
      model,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
    );
  }

  /// Generates a request to delete a model.
  ///
  ///
  /// ```dart
  /// final request = ModelMutations.delete(someTodoIDontWant);
  /// ```
  ///
  /// An optional `where` parameter can be supplied as a condition for the deletion to be evaluated on the server.
  static GraphQLRequest<M> delete<ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>>(
    M model, {
    QueryPredicate<ModelIdentifier, M>? where,
    String? apiName,
    Map<String, String>? headers,
    APIAuthorizationType? authorizationMode,
  }) {
    return ModelMutationsFactory.instance.delete<ModelIdentifier, M>(
      model,
      where: where,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
    );
  }

  /// Generates a request to delete a model by [ModelIdentifier].
  ///
  /// ```dart
  /// final request = ModelMutations.deleteById(
  ///   Todo.classType,
  ///   TodoModelIdentifier(id: 'some-todo-id-123'),
  /// );
  /// ```
  ///
  /// An optional `where` parameter can be supplied as a condition for the deletion to be evaluated on the server.
  static GraphQLRequest<M> deleteById<
      ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>,
      P extends PartialModel<ModelIdentifier, M>>(
    ModelType<ModelIdentifier, M, P> modelType,
    ModelIdentifier id, {
    QueryPredicate<ModelIdentifier, M>? where,
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
  }) {
    return ModelMutationsFactory.instance.deleteById<ModelIdentifier, M>(
      modelType,
      modelIdentifier,
      where: where,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
    );
  }

  /// Generates a request to update a model instance.
  ///
  /// ```dart
  /// final todoWithNewName = someTodo.copyWith(name: 'new name');
  /// final request = ModelMutations.update(todoWithNewName);
  /// ```
  ///
  /// An optional `where` parameter can be supplied as a condition for the update to be evaluated on the server.
  static GraphQLRequest<M> update<ModelIdentifier extends Object,
      M extends Model<ModelIdentifier, M>>(
    M model, {
    QueryPredicate<ModelIdentifier, M>? where,
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
  }) {
    return ModelMutationsFactory.instance.update<ModelIdentifier, M>(
      model,
      where: where,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
    );
  }
}

// TODO(ragingsquirrel3): remove when https://github.com/dart-lang/sdk/issues/50748 addressed
// ignore_for_file: flutter_style_todos
