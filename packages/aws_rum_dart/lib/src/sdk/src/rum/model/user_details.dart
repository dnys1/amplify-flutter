// Generated with smithy-dart 0.5.5. DO NOT MODIFY.

library aws_rum_dart.rum.model.user_details;

import 'package:aws_common/aws_common.dart' as _i1;
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';
import 'package:smithy/smithy.dart' as _i2;

part 'user_details.g.dart';

/// A structure that contains information about the user session that this batch of events was collected from.
abstract class UserDetails
    with _i1.AWSEquatable<UserDetails>
    implements Built<UserDetails, UserDetailsBuilder> {
  /// A structure that contains information about the user session that this batch of events was collected from.
  factory UserDetails({String? sessionId, String? userId}) {
    return _$UserDetails._(sessionId: sessionId, userId: userId);
  }

  /// A structure that contains information about the user session that this batch of events was collected from.
  factory UserDetails.build([void Function(UserDetailsBuilder) updates]) =
      _$UserDetails;

  const UserDetails._();

  static const List<_i2.SmithySerializer> serializers = [
    _UserDetailsRestJson1Serializer()
  ];

  @BuiltValueHook(initializeBuilder: true)
  static void _init(UserDetailsBuilder b) {}

  /// The session ID that the performance events are from.
  String? get sessionId;

  /// The ID of the user for this user session. This ID is generated by RUM and does not include any personally identifiable information about the user.
  String? get userId;
  @override
  List<Object?> get props => [sessionId, userId];
  @override
  String toString() {
    final helper = newBuiltValueToStringHelper('UserDetails');
    helper.add('sessionId', sessionId);
    helper.add('userId', userId);
    return helper.toString();
  }
}

class _UserDetailsRestJson1Serializer
    extends _i2.StructuredSmithySerializer<UserDetails> {
  const _UserDetailsRestJson1Serializer() : super('UserDetails');

  @override
  Iterable<Type> get types => const [UserDetails, _$UserDetails];
  @override
  Iterable<_i2.ShapeId> get supportedProtocols =>
      const [_i2.ShapeId(namespace: 'aws.protocols', shape: 'restJson1')];
  @override
  UserDetails deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = UserDetailsBuilder();
    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final value = iterator.current;
      switch (key) {
        case 'sessionId':
          if (value != null) {
            result.sessionId = (serializers.deserialize(value,
                specifiedType: const FullType(String)) as String);
          }
          break;
        case 'userId':
          if (value != null) {
            result.userId = (serializers.deserialize(value,
                specifiedType: const FullType(String)) as String);
          }
          break;
      }
    }

    return result.build();
  }

  @override
  Iterable<Object?> serialize(Serializers serializers, Object? object,
      {FullType specifiedType = FullType.unspecified}) {
    final payload = (object as UserDetails);
    final result = <Object?>[];
    if (payload.sessionId != null) {
      result
        ..add('sessionId')
        ..add(serializers.serialize(payload.sessionId!,
            specifiedType: const FullType(String)));
    }
    if (payload.userId != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(payload.userId!,
            specifiedType: const FullType(String)));
    }
    return result;
  }
}
