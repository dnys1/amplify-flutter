// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_cast
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "dart:isolate" show ReceivePort;
import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

import "../../../../../_init.dart";

/// from: software.amazon.smithy.model.validation.ValidatedResult
///
/// Represents the result of an operation and the ValidationEvents
/// that occurred.
///@param <T> The type being created.
class ValidatedResult<$T extends jni.JObject> extends jni.JObject {
  @override
  late final jni.JObjType<ValidatedResult<$T>> $type = type(T);

  final jni.JObjType<$T> T;

  ValidatedResult.fromRef(
    this.T,
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static $ValidatedResultType<$T> type<$T extends jni.JObject>(
    jni.JObjType<$T> T,
  ) {
    return $ValidatedResultType(
      T,
    );
  }

  static final _ctor = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("ValidatedResult__ctor")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(T result, java.util.List<software.amazon.smithy.model.validation.ValidationEvent> events)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a result with a value and events.
  ///@param result Value to set.
  ///@param events Events to set.
  factory ValidatedResult(
    $T result,
    jni.JList<jni.JObject> events, {
    jni.JObjType<$T>? T,
  }) {
    T ??= jni.lowestCommonSuperType([
      result.$type,
    ]) as jni.JObjType<$T>;
    return ValidatedResult.fromRef(
        T, _ctor(result.reference, events.reference).object);
  }

  static final _ctor1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("ValidatedResult__ctor1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(T result, java.util.Collection<software.amazon.smithy.model.validation.ValidationEvent> events)
  /// The returned object must be deleted after use, by calling the `delete` method.
  factory ValidatedResult.ctor1(
    $T result,
    jni.JObject events, {
    jni.JObjType<$T>? T,
  }) {
    T ??= jni.lowestCommonSuperType([
      result.$type,
    ]) as jni.JObjType<$T>;
    return ValidatedResult.fromRef(
        T, _ctor1(result.reference, events.reference).object);
  }

  static final _fromErrors = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__fromErrors")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public software.amazon.smithy.model.validation.ValidatedResult<T> fromErrors(java.util.List<software.amazon.smithy.model.validation.ValidationEvent> events)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new ValidatedResult with no values and a list of
  /// ValidationEvents.
  ///@param events Validation events on the result.
  ///@param <T> The type of value in the result.
  ///@return Returns the created ValidatedResult.
  static ValidatedResult<$T> fromErrors<$T extends jni.JObject>(
    jni.JList<jni.JObject> events, {
    required jni.JObjType<$T> T,
  }) {
    return $ValidatedResultType(T)
        .fromRef(_fromErrors(events.reference).object);
  }

  static final _fromErrors1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__fromErrors1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public software.amazon.smithy.model.validation.ValidatedResult<T> fromErrors(java.util.Collection<software.amazon.smithy.model.validation.ValidationEvent> events)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static ValidatedResult<$T> fromErrors1<$T extends jni.JObject>(
    jni.JObject events, {
    required jni.JObjType<$T> T,
  }) {
    return $ValidatedResultType(T)
        .fromRef(_fromErrors1(events.reference).object);
  }

  static final _fromValue = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__fromValue")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public software.amazon.smithy.model.validation.ValidatedResult<T> fromValue(T value)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new ValidatedResult with a value and no
  /// ValidationEvents.
  ///@param value Result value,
  ///@param <T> The type of value in the result.
  ///@return Returns the created ValidatedResult.
  static ValidatedResult<$T> fromValue<$T extends jni.JObject>(
    $T value, {
    jni.JObjType<$T>? T,
  }) {
    T ??= jni.lowestCommonSuperType([
      value.$type,
    ]) as jni.JObjType<$T>;
    return $ValidatedResultType(T).fromRef(_fromValue(value.reference).object);
  }

  static final _empty = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "ValidatedResult__empty")
      .asFunction<jni.JniResult Function()>();

  /// from: static public software.amazon.smithy.model.validation.ValidatedResult<T> empty()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates an empty ValidatedResult with no value and no events.
  ///@param <T> The type of value in the result.
  ///@return Returns the created ValidatedResult.
  static ValidatedResult<$T> empty<$T extends jni.JObject>({
    required jni.JObjType<$T> T,
  }) {
    return $ValidatedResultType(T).fromRef(_empty().object);
  }

  static final _getValidationEvents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__getValidationEvents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<software.amazon.smithy.model.validation.ValidationEvent> getValidationEvents()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the list of ValidationEvents associated with the result.
  ///@return Returns the validation events.
  jni.JList<jni.JObject> getValidationEvents() {
    return const jni.JListType(jni.JObjectType())
        .fromRef(_getValidationEvents(reference).object);
  }

  static final _getValidationEvents1 = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__getValidationEvents1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<software.amazon.smithy.model.validation.ValidationEvent> getValidationEvents(software.amazon.smithy.model.validation.Severity severity)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get validation events of a particular severity.
  ///@param severity Severity to get.
  ///@return Returns a list of events with the given severity.
  jni.JList<jni.JObject> getValidationEvents1(
    jni.JObject severity,
  ) {
    return const jni.JListType(jni.JObjectType())
        .fromRef(_getValidationEvents1(reference, severity.reference).object);
  }

  static final _getResult = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__getResult")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Optional<T> getResult()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the optional result.
  ///@return Returns the optional result.
  jni.JObject getResult() {
    return const jni.JObjectType().fromRef(_getResult(reference).object);
  }

  static final _unwrap = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__unwrap")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public T unwrap()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the result, but throw if there are any ERROR events or if the
  /// result is empty.
  ///@return Returns the result.
  ///@throws ValidatedResultException if there are any ERROR events.
  ///@throws IllegalStateException if there is no result.
  $T unwrap() {
    return T.fromRef(_unwrap(reference).object);
  }

  static final _validate = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__validate")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Optional<T> validate()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the optional result, and throw if there are any ERROR events.
  ///@return Returns the optional result.
  ///@throws ValidatedResultException if there are any ERROR events.
  jni.JObject validate() {
    return const jni.JObjectType().fromRef(_validate(reference).object);
  }

  static final _isBroken = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ValidatedResult__isBroken")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isBroken()
  ///
  /// Checks if the result has any error or danger events..
  ///@return Returns true if there are errors or unsuppressed dangers.
  bool isBroken() {
    return _isBroken(reference).boolean;
  }
}

class $ValidatedResultType<$T extends jni.JObject>
    extends jni.JObjType<ValidatedResult<$T>> {
  final jni.JObjType<$T> T;

  const $ValidatedResultType(
    this.T,
  );

  @override
  String get signature =>
      r"Lsoftware/amazon/smithy/model/validation/ValidatedResult;";

  @override
  ValidatedResult<$T> fromRef(jni.JObjectPtr ref) =>
      ValidatedResult.fromRef(T, ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => Object.hash($ValidatedResultType, T);

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($ValidatedResultType<$T>) &&
        other is $ValidatedResultType<$T> &&
        T == other.T;
  }
}
